using System;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using PatientVault.Plugin.Entities;
using PatientVault.Plugin.Service;
using PatientVault.PluginDotNet40.Factory;

namespace PatientVault.Plugin.Examples.PostEHRVisit
{
    class Program
    {
        public static PatientVaultConfiguration GetConfiguration()
        {
            var configuration = new PatientVaultConfiguration();
            configuration.ApiRootUrl = @"https://test.neodecksoftware.com/pv/patientvaultapi";
            configuration.ApiKey = "";
            configuration.DevKey = "";
            configuration.CustomerKey = "";
            configuration.Culture = "en";
            configuration.TimeZone = "SA Western Standard Time";
            return configuration;
        }
        static void Main(string[] args)
        {
            var encryption = new EncryptionService();
            var configuration = GetConfiguration();
            var factory = new PatientVaultPostServiceDotNet40Factory();
            var client = new PatientVaultClient(encryption, configuration, factory);

            PostEhrVisit(client);

            Console.ReadLine();

        }

        private static void PostEhrVisit(PatientVaultClient client)
        {
            string accessToken = ""; // Access Token Received from Authentication
            var request = new ActivityPostEhrVisitRequest();
            request.AccessToken = accessToken;
            request.Note = "This is a note you can send the patient";
            request.Patient.BirthDate = DateTime.Parse("1/1/1980");
            request.Patient.Email = "johnsnow@example.com";
            request.Patient.FamilyName = "Snow";
            request.Patient.Gender = "M"; // M (Male) or (F) Female
            request.Patient.GivenName = "John";
            request.Patient.HomeAddressLine1 = "Bright Sun Street #38381";
            request.Patient.HomeAddressLine2 = "Corner with Moon Street";
            request.Patient.HomeCity = "Ponce";
            request.Patient.HomeCountry = "Puerto Rico";
            request.Patient.HomePhone = "7876516154";
            request.Patient.HomeState = "PR";
            request.Patient.HomeZip = "00730";
            request.Patient.RecordNumber = "12345";

            request.Provider.LocationName = "Get Well Clinic";
            request.Provider.Phone1 = "7876516154";
            request.Provider.Fax = "7876516154";
            request.Provider.AddressLine1 = "22 Sol Street";
            request.Provider.AddressLine2 = "Esq. Virtud";
            request.Provider.City = "Ponce";
            request.Provider.Country = "Puerto Rico";
            request.Provider.State = "PR";
            request.Provider.Zip = "00730";

            var result = client.ActivityPostEhrVisit(request);
            OutputResult(result);


            // Record the activityId so we can use it to send the attachments
            var activityId = result.ActivityId;

            Console.WriteLine("Posting CCDA...");
            var ccdaRequest = new ActivityAttachmentPostRequest();
            ccdaRequest.AccessToken = accessToken;
            ccdaRequest.ActivityId = activityId.GetValueOrDefault();
            ccdaRequest.FileName = "ccda.xml";
            ccdaRequest.EncodedFile = Base64Encode(Files.CCDA);
            ccdaRequest.FileHash = ""; // This is automatically generated by the plugin
            ccdaRequest.Title = "Your CCDA";
            var attachmentResult = client.ActivityAttachmentPost(ccdaRequest);
            OutputResult(attachmentResult);

            Console.WriteLine("Posting ECG...");
            var ecgRequest = new ActivityAttachmentPostRequest();
            ecgRequest.AccessToken = accessToken;
            ecgRequest.ActivityId = activityId.GetValueOrDefault();
            ecgRequest.FileName = "ECG.PDF";
            ecgRequest.EncodedFile = Convert.ToBase64String(Files.ECG);
            ecgRequest.FileHash = ""; // This is automatically generated by the plugin
            ecgRequest.Title = "Your ECG";
            var attachmentEcgResult = client.ActivityAttachmentPost(ecgRequest);
            OutputResult(attachmentEcgResult);

            Console.WriteLine("Posting Insurance...");
            var insRequest = new ActivityAttachmentPostRequest();
            insRequest.AccessToken = accessToken;
            insRequest.ActivityId = activityId.GetValueOrDefault();
            insRequest.FileName = "Insurance.jpg";
            insRequest.EncodedFile = Convert.ToBase64String(Files.Insurance_jpg);
            insRequest.FileHash = ""; // This is automatically generated by the plugin
            insRequest.Title = "HealthPlan Card";
            var attachmentInsResult = client.ActivityAttachmentPost(insRequest);
            OutputResult(attachmentInsResult);

            Console.WriteLine("Posting Labs...");
            var labsRequest = new ActivityAttachmentPostRequest();
            labsRequest.AccessToken = accessToken;
            labsRequest.ActivityId = activityId.GetValueOrDefault();
            labsRequest.FileName = "labs.jpg";
            labsRequest.EncodedFile = Convert.ToBase64String(Files.Labs_jpg);
            labsRequest.FileHash = ""; // This is automatically generated by the plugin
            labsRequest.Title = "Lab Results";
            var attachmentlabsResult = client.ActivityAttachmentPost(labsRequest);
            OutputResult(attachmentlabsResult);

            
        }
        public static string Base64Encode(string plainText)
        {
            var plainTextBytes = System.Text.Encoding.UTF8.GetBytes(plainText);
            return System.Convert.ToBase64String(plainTextBytes);
        }

        private static void OutputResult(object result, string title = "")
        {
            Console.WriteLine(title);
            var json = JsonConvert.SerializeObject(result);
            JObject parsed = JObject.Parse(json);
            foreach (var pair in parsed)
            {
                Console.WriteLine("{0}: {1}", pair.Key, pair.Value);
            }
        }
    }
}
